apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wuhanzihai.rbk.ruibeikang"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 203
        versionName "2.0.3"
        multiDexEnabled true

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a' //, 'x86', 'x86_64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "b3aa74fe4a96a9c7ab4784a8", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    signingConfigs {
        config {
            keyAlias 'rbk'
            keyPassword '123456'
            storeFile file('rbk.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                        def fileName = "app-release" + defaultConfig.versionName + ".apk";
                        outputFileName = fileName
                    }
                }
            }
        }
        debug {
            signingConfig signingConfigs.config
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}


kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'com.huawei.android.hms:push:2.6.3.301'
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    implementation project(':BaseLibrary')
    implementation(name: 'alipaySdk-15.6.5-20190718211159-noUtdid', ext: 'aar')

    // 手环SDK
    implementation(name: 'BleWristCore-release-v3.0.0', ext: 'aar')

    // 体脂称SDK
    implementation(name: 'vtble-sdk-android-v3.0.1', ext: 'aar')

    //流式布局
    implementation 'com.hyman:flowlayout-lib:1.1.2'

    //    微信
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    // 证件拍照
    implementation 'com.github.wildma:IDCardCamera:1.1.0'

    // 弹窗
    implementation 'com.github.goweii:AnyLayer:2.1.3'

    // webView
    implementation 'com.just.agentweb:agentweb:4.0.3-beta'

    // 缓存
    implementation 'com.orhanobut:hawk:2.0.1'

    // 二维码扫描
    implementation 'com.google.zxing:core:3.3.3'
    implementation project(':qrcodecore')

    // 页面跳转
    kapt 'com.alibaba:arouter-compiler:1.2.2'

    // BUG 收集
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也

    // 推送
    implementation 'cn.jiguang.sdk:jpush:3.4.1'  // 此处以JPush 3.4.1 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.2.4'  // 此处以JCore 2.2.4 版本为例。
}
